{"version":3,"file":"617.index.js","mappings":"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","sources":["webpack://snyk/./src/cli/commands/test/iac/local-execution/assert-iac-options-flag.ts","webpack://snyk/./src/cli/commands/test/iac/local-execution/error-utils.ts","webpack://snyk/./src/cli/commands/test/iac/local-execution/org-settings/get-iac-org-settings.ts","webpack://snyk/./src/lib/iac/constants.ts","webpack://snyk/./src/lib/iac/drift/driftctl.ts","webpack://snyk/./src/lib/iac/env-utils.ts","webpack://snyk/./src/lib/iac/file-utils.ts","webpack://snyk/./src/lib/iac/service-mappings.ts"],"sourcesContent":["import { CustomError } from '../../../../../lib/errors';\nimport { args } from '../../../../args';\nimport { getErrorStringCode } from './error-utils';\nimport {\n  IaCErrorCodes,\n  IacOrgSettings,\n  IaCTestFlags,\n  TerraformPlanScanMode,\n} from './types';\nimport { Options, TestOptions } from '../../../../../lib/types';\nimport { IacV2Name } from '../../../../../lib/iac/constants';\n\nconst keys: (keyof IaCTestFlags)[] = [\n  'org',\n  'debug',\n  'insecure',\n  'detectionDepth',\n  'severityThreshold',\n  'rules',\n  'json',\n  'sarif',\n  'json-file-output',\n  'sarif-file-output',\n  'v',\n  'version',\n  'h',\n  'help',\n  'q',\n  'quiet',\n  'scan',\n  'report',\n  // Tags and attributes\n  'tags',\n  'project-tags',\n  'project-environment',\n  'project-lifecycle',\n  'project-business-criticality',\n  'target-reference',\n  'var-file',\n  // PolicyOptions\n  'ignore-policy',\n  'policy-path',\n  // Report options\n  'remote-repo-url',\n  'target-name',\n];\nconst integratedKeys: (keyof IaCTestFlags)[] = ['snyk-cloud-environment'];\n\nconst allowed = new Set<string>(keys);\nconst integratedOnlyFlags = new Set<string>(integratedKeys);\n\nfunction camelcaseToDash(key: string) {\n  return key.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\n}\n\nfunction getFlagName(key: string) {\n  const dashes = key.length === 1 ? '-' : '--';\n  const flag = camelcaseToDash(key);\n  return `${dashes}${flag}`;\n}\n\nexport class FlagError extends CustomError {\n  constructor(key: string) {\n    const flag = getFlagName(key);\n    const msg = `Unsupported flag \"${flag}\" provided. Run snyk iac test --help for supported flags`;\n    super(msg);\n    this.code = IaCErrorCodes.FlagError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n\nexport class IntegratedFlagError extends CustomError {\n  constructor(key: string, org: string) {\n    const flag = getFlagName(key);\n    const msg = `Flag \"${flag}\" is only supported when using ${IacV2Name}. To enable it for your organisation \"${org}\", please contact Snyk support.`;\n    super(msg);\n    this.code = IaCErrorCodes.FlagError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n\nexport class FeatureFlagError extends CustomError {\n  constructor(key: string, featureFlag: string, hasSnykPreview?: boolean) {\n    const flag = getFlagName(key);\n    let msg;\n    if (hasSnykPreview) {\n      msg = `Flag \"${flag}\" is only supported if feature flag '${featureFlag}' is enabled. The feature flag can be enabled via Snyk Preview if you are on the Enterprise Plan`;\n    } else {\n      msg = `Flag \"${flag}\" is only supported if feature flag \"${featureFlag}\" is enabled. To enable it, please contact Snyk support.`;\n    }\n    super(msg);\n    this.code = IaCErrorCodes.FeatureFlagError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n\nexport class FlagValueError extends CustomError {\n  constructor(key: string, value: string, supportedValues: string) {\n    const flag = getFlagName(key);\n    const msg = `Unsupported value \"${value}\" provided to flag \"${flag}\".\\nSupported values are: ${supportedValues}`;\n    super(msg);\n    this.code = IaCErrorCodes.FlagValueError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n\nexport class UnsupportedEntitlementFlagError extends CustomError {\n  constructor(key: string, entitlementName: string) {\n    const flag = getFlagName(key);\n    super(\n      `Unsupported flag: ${flag} - Missing the ${entitlementName} entitlement`,\n    );\n    this.code = IaCErrorCodes.UnsupportedEntitlementFlagError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = `Flag \"${flag}\" is currently not supported for this org. To enable it, please contact snyk support.`;\n  }\n}\n\nexport class UnsupportedEntitlementCommandError extends CustomError {\n  constructor(key: string, entitlementName: string) {\n    super(\n      `Unsupported command: ${key} - Missing the ${entitlementName} entitlement`,\n    );\n    this.code = IaCErrorCodes.UnsupportedEntitlementFlagError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = `Command \"${key}\" is currently not supported for this org. To enable it, please contact snyk support.`;\n  }\n}\n\n/**\n * Validates the command line flags passed to the snyk iac test\n * command. The current argument parsing is very permissive and\n * allows unknown flags to be provided without validation.\n *\n * For snyk iac we need to explicitly validate the flags to avoid\n * misconfigurations and typos. For example, if the --experimental\n * flag were to be misspelled we would end up sending the client\n * data to our backend rather than running it locally as intended.\n * @param argv command line args passed to the process\n */\nexport function assertIaCOptionsFlags(argv: string[]): void {\n  // We process the process.argv so we don't get default values.\n  const parsed = args(argv);\n  for (const key of Object.keys(parsed.options)) {\n    // The _ property is a special case that contains non\n    // flag strings passed to the command line (usually files)\n    // and `iac` is the command provided.\n    if (key !== '_' && key !== 'iac' && !allowed.has(key)) {\n      throw new FlagError(key);\n    }\n  }\n\n  if (parsed.options.scan) {\n    assertTerraformPlanModes(parsed.options.scan as string);\n  }\n}\n\n/**\n * Check that the flags used for the v1 flow do not contain any flag that are\n * only usable with the new IaC+ flow\n * @param settings organisation settings, used to get the org name\n * @param argv command line args\n */\nexport function assertIntegratedIaCOnlyOptions(\n  settings: IacOrgSettings,\n  argv: string[],\n): void {\n  // We process the process.argv so we don't get default values.\n  const parsed = args(argv);\n  for (const key of Object.keys(parsed.options)) {\n    // The _ property is a special case that contains non\n    // flag strings passed to the command line (usually files)\n    // and `iac` is the command provided.\n    if (key !== '_' && key !== 'iac' && integratedOnlyFlags.has(key)) {\n      throw new IntegratedFlagError(key, settings.meta.org);\n    }\n  }\n}\n\nconst SUPPORTED_TF_PLAN_SCAN_MODES = [\n  TerraformPlanScanMode.DeltaScan,\n  TerraformPlanScanMode.FullScan,\n];\n\nexport function assertTerraformPlanModes(scanModeArgValue: string) {\n  if (\n    !SUPPORTED_TF_PLAN_SCAN_MODES.includes(\n      scanModeArgValue as TerraformPlanScanMode,\n    )\n  ) {\n    throw new FlagValueError(\n      'scan',\n      scanModeArgValue,\n      SUPPORTED_TF_PLAN_SCAN_MODES.join(', '),\n    );\n  }\n}\n\nexport function isIacShareResultsOptions(\n  options: Options & TestOptions,\n): boolean | undefined {\n  return options.iac && options.report;\n}\nexport class InvalidArgumentError extends CustomError {\n  constructor(key: string) {\n    const flag = getFlagName(key);\n    const msg = `Invalid argument provided to flag \"${flag}\". Value must be a string`;\n    super(msg);\n    this.code = IaCErrorCodes.InvalidArgumentError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n","import { IaCErrorCodes } from './types';\n\nexport function getErrorStringCode(code: number): string {\n  const errorName = IaCErrorCodes[code];\n  if (!errorName) {\n    return 'INVALID_IAC_ERROR';\n  }\n  let result = errorName.replace(/([A-Z])/g, '_$1');\n  if (result.charAt(0) === '_') {\n    result = result.substring(1);\n  }\n  return result.toUpperCase();\n}\n","import { IaCErrorCodes, IacOrgSettings } from '../types';\nimport { Payload } from '../../../../../../lib/snyk-test/types';\nimport config from '../../../../../../lib/config';\nimport { isCI } from '../../../../../../lib/is-ci';\nimport { getAuthHeader } from '../../../../../../lib/api-token';\nimport { makeRequest } from '../../../../../../lib/request';\nimport { CustomError } from '../../../../../../lib/errors';\nimport { getErrorStringCode } from '../error-utils';\n\nexport function getIacOrgSettings(\n  publicOrgId?: string,\n): Promise<IacOrgSettings> {\n  const payload: Payload = {\n    method: 'get',\n    url: config.API + '/iac-org-settings',\n    json: true,\n    qs: { org: publicOrgId },\n    headers: {\n      'x-is-ci': isCI(),\n      authorization: getAuthHeader(),\n    },\n  };\n\n  return new Promise((resolve, reject) => {\n    makeRequest(payload, (error, res) => {\n      if (error) {\n        return reject(error);\n      }\n      if (res.statusCode < 200 || res.statusCode > 299) {\n        return reject(new FailedToGetIacOrgSettingsError());\n      }\n      resolve(res.body);\n    });\n  });\n}\n\nexport class FailedToGetIacOrgSettingsError extends CustomError {\n  constructor(message?: string) {\n    super(message || 'Failed to fetch IaC organization settings');\n    this.code = IaCErrorCodes.FailedToGetIacOrgSettingsError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage =\n      'We failed to fetch your organization settings, including custom severity overrides for infrastructure-as-code policies. Please run the command again with the `-d` flag and contact support@snyk.io with the contents of the output.';\n  }\n}\n","import { ParserFileType } from '@snyk/cloud-config-parser';\n\nexport type IacProjectTypes =\n  | 'k8sconfig'\n  | 'terraformconfig'\n  | 'cloudformationconfig'\n  | 'armconfig'\n  | 'customconfig'\n  | 'multiiacconfig';\nexport type IacFileTypes = ParserFileType | 'tf' | 'tfvars';\n\nexport enum IacProjectType {\n  K8S = 'k8sconfig',\n  TERRAFORM = 'terraformconfig',\n  CLOUDFORMATION = 'cloudformationconfig',\n  ARM = 'armconfig',\n  CUSTOM = 'customconfig',\n  MULTI_IAC = 'multiiacconfig',\n}\n\nexport const TEST_SUPPORTED_IAC_PROJECTS: IacProjectTypes[] = [\n  IacProjectType.K8S,\n  IacProjectType.TERRAFORM,\n  IacProjectType.CLOUDFORMATION,\n  IacProjectType.ARM,\n  IacProjectType.MULTI_IAC,\n  IacProjectType.CUSTOM,\n];\n\nexport const iacRemediationTypes: { [k in IacProjectTypes]?: string } = {\n  armconfig: 'arm',\n  cloudformationconfig: 'cloudformation',\n  k8sconfig: 'kubernetes',\n  terraformconfig: 'terraform',\n};\n\nexport const IacV2Name = 'IaC+';\n\nexport const IacV2ShortLink = 'https://snyk.co/iac+';\n","import config from '../../config';\nimport { EXIT_CODES } from '../../../cli/exit-codes';\nimport envPaths from 'env-paths';\nimport {\n  DescribeOptions,\n  DriftctlExecutionResult,\n  DriftCTLOptions,\n  FmtOptions,\n} from '../types';\nimport { TimerMetricInstance } from '../../metrics';\nimport * as analytics from '../../analytics';\nimport { spinner } from '../../spinner';\nimport {\n  createIgnorePattern,\n  verifyServiceMappingExists,\n} from '../service-mappings';\nimport * as debugLib from 'debug';\nimport { makeRequest } from '../../request';\nimport * as child_process from 'child_process';\nimport { StdioOptions } from 'child_process';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport * as crypto from 'crypto';\nimport { createDirIfNotExists, isExe } from '../file-utils';\nimport { restoreEnvProxy } from '../env-utils';\n\nconst debug = debugLib('driftctl');\n\nconst cachePath = config.CACHE_PATH ?? envPaths('snyk').cache;\n\nexport const DCTL_EXIT_CODES = {\n  EXIT_IN_SYNC: 0,\n  EXIT_NOT_IN_SYNC: 1,\n  EXIT_ERROR: 2,\n};\n\nexport const driftctlVersion = 'v0.40.0';\n\nconst driftctlChecksums = {\n  driftctl_darwin_amd64:\n    '4eb86bd4a1e965c2552879795434143f1db974b2d795581b9ddb69d0bd8a245a',\n  'driftctl_windows_386.exe':\n    'a02f079cb128ba46396db9654bc8bb8066ebde0539ebbeb401a40a81dfc8f733',\n  driftctl_darwin_arm64:\n    'dfdee8138eb817cc066b8bf915c808fbd53536ee1757b34ca6e518e1c2ad1ba5',\n  driftctl_linux_arm64:\n    '8816f1378138c2ce585c762e109b5fdd41b7144b915e97759ceae946db023540',\n  'driftctl_windows_arm.exe':\n    '6217151b4168e93ffdd6e005cb1cf03768f371cd6b412f53605fde46343c08d1',\n  driftctl_linux_amd64:\n    '84e2462454956a4df794a24e0f4d2351299212d772b8602fc5070e6174ac1324',\n  'driftctl_windows_amd64.exe':\n    '1561fd04e3d428c39ae95f81214517bbf62e8333156bf538a2d385005e350c8b',\n  'driftctl_windows_arm64.exe':\n    '76f939d836da64fa9dab63f0eeffd09a0de7e353b034296b8f1582cdff6f2a61',\n  driftctl_linux_arm:\n    '7f669ca49e152779a09587ff0e58dedd3996229cc8ff3e5cdc371895eaa994f6',\n  driftctl_linux_386:\n    'e6bbdf341148e81511d30dd5afe2fa2ef08f3b0b75079bf0bde2b790d75beb8a',\n};\n\nconst dctlBaseUrl = 'https://static.snyk.io/cli/driftctl/';\n\nconst driftctlPath: string = path.join(\n  cachePath,\n  'driftctl_' + driftctlVersion,\n);\n\nconst driftctlDefaultOptions = ['--no-version-check'];\n\nlet isBinaryDownloaded = false;\n\nexport const generateArgs = async (\n  options: DriftCTLOptions,\n  driftIgnore?: string[],\n): Promise<string[]> => {\n  if (options.kind === 'describe') {\n    return await generateScanFlags(options as DescribeOptions, driftIgnore);\n  }\n\n  if (options.kind === 'fmt') {\n    return generateFmtFlags(options as FmtOptions);\n  }\n\n  throw 'Unsupported command';\n};\n\nconst generateFmtFlags = (options: FmtOptions): string[] => {\n  const args: string[] = ['fmt', ...driftctlDefaultOptions];\n\n  if (options.json) {\n    args.push('--output');\n    args.push('json://stdout');\n  }\n\n  if (options.html) {\n    args.push('--output');\n    args.push('html://stdout');\n  }\n\n  if (options['html-file-output']) {\n    args.push('--output');\n    args.push('html://' + options['html-file-output']);\n  }\n\n  return args;\n};\n\nconst generateScanFlags = async (\n  options: DescribeOptions,\n  driftIgnore?: string[],\n): Promise<string[]> => {\n  const args: string[] = ['scan', ...driftctlDefaultOptions];\n\n  if (options.quiet) {\n    args.push('--quiet');\n  }\n\n  if (options.filter) {\n    args.push('--filter');\n    args.push(options.filter);\n  }\n\n  args.push('--output');\n  args.push('json://stdout');\n\n  if (options['fetch-tfstate-headers']) {\n    args.push('--headers');\n    args.push(options['fetch-tfstate-headers']);\n  }\n\n  if (options['tfc-token']) {\n    args.push('--tfc-token');\n    args.push(options['tfc-token']);\n  }\n\n  if (options['tfc-endpoint']) {\n    args.push('--tfc-endpoint');\n    args.push(options['tfc-endpoint']);\n  }\n\n  if (options['tf-provider-version']) {\n    args.push('--tf-provider-version');\n    args.push(options['tf-provider-version']);\n  }\n\n  if (options.strict) {\n    args.push('--strict');\n  }\n\n  if (options['only-unmanaged']) {\n    args.push('--only-unmanaged');\n  }\n\n  if (options.driftignore) {\n    args.push('--driftignore');\n    args.push(options.driftignore);\n  }\n\n  if (options['tf-lockfile']) {\n    args.push('--tf-lockfile');\n    args.push(options['tf-lockfile']);\n  }\n\n  if (driftIgnore && driftIgnore.length > 0) {\n    args.push('--ignore');\n    args.push(driftIgnore.join(','));\n  }\n\n  let configDir = cachePath;\n  await createDirIfNotExists(cachePath);\n  if (options['config-dir']) {\n    configDir = options['config-dir'];\n  }\n  args.push('--config-dir');\n  args.push(configDir);\n\n  if (options.from) {\n    const froms = options.from.split(',');\n    for (const f of froms) {\n      args.push('--from');\n      args.push(f);\n    }\n  }\n\n  let to = 'aws+tf';\n  if (options.to) {\n    to = options.to;\n  }\n  args.push('--to');\n  args.push(to);\n\n  if (options.service) {\n    const services = options.service.split(',');\n    verifyServiceMappingExists(services);\n    args.push('--ignore');\n    args.push(createIgnorePattern(services));\n  }\n\n  debug(args);\n\n  return args;\n};\n\nexport function translateExitCode(exitCode: number | null): number {\n  switch (exitCode) {\n    case DCTL_EXIT_CODES.EXIT_IN_SYNC:\n      return 0;\n    case DCTL_EXIT_CODES.EXIT_NOT_IN_SYNC:\n      return EXIT_CODES.VULNS_FOUND;\n    case DCTL_EXIT_CODES.EXIT_ERROR:\n      return EXIT_CODES.ERROR;\n    default:\n      debug('driftctl returned %d', exitCode);\n      return EXIT_CODES.ERROR;\n  }\n}\n\nexport const runDriftCTL = async ({\n  options,\n  driftIgnore,\n  input,\n  stdio,\n}: {\n  options: DriftCTLOptions;\n  driftIgnore?: string[];\n  input?: string;\n  stdio?: StdioOptions;\n}): Promise<DriftctlExecutionResult> => {\n  const path = await findOrDownload();\n\n  const args = await generateArgs(options, driftIgnore);\n\n  if (!stdio) {\n    stdio = ['pipe', 'pipe', 'inherit'];\n  }\n\n  debug('running driftctl %s ', args.join(' '));\n\n  const dctl_env: NodeJS.ProcessEnv = restoreEnvProxy({\n    ...process.env,\n    DCTL_IS_SNYK: 'true',\n  });\n\n  const p = child_process.spawn(path, args, {\n    stdio,\n    env: dctl_env,\n  });\n\n  let stdout = '';\n  return new Promise<DriftctlExecutionResult>((resolve, reject) => {\n    if (input) {\n      p.stdin?.write(input);\n      p.stdin?.end();\n    }\n    p.on('error', (error) => {\n      reject(error);\n    });\n\n    p.stdout?.on('data', (data) => {\n      stdout += data;\n    });\n\n    p.on('exit', (code) => {\n      resolve({ code: translateExitCode(code), stdout });\n    });\n  });\n};\n\nasync function findOrDownload(): Promise<string> {\n  let dctl = await findDriftCtl();\n  if (isBinaryDownloaded) {\n    return dctl;\n  }\n  let downloadDuration = 0;\n  let binaryExist = true;\n  if (dctl === '') {\n    binaryExist = false;\n    try {\n      await createDirIfNotExists(cachePath);\n      dctl = driftctlPath;\n\n      const duration = new TimerMetricInstance('driftctl_download');\n      duration.start();\n      await download(driftctlUrl(), dctl);\n      duration.stop();\n\n      downloadDuration = Math.round((duration.getValue() as number) / 1000);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n  analytics.add('iac-drift-binary-already-exist', binaryExist);\n  analytics.add('iac-drift-binary-download-duration-seconds', downloadDuration);\n  isBinaryDownloaded = true;\n  return dctl;\n}\n\nasync function findDriftCtl(): Promise<string> {\n  // lookup in custom path contained in env var DRIFTCTL_PATH\n  let dctlPath = config.DRIFTCTL_PATH;\n  if (dctlPath != null) {\n    const exists = await isExe(dctlPath);\n    if (exists) {\n      debug('Found driftctl in $DRIFTCTL_PATH: %s', dctlPath);\n      return dctlPath;\n    }\n  }\n\n  // lookup in app cache\n  dctlPath = driftctlPath;\n  const exists = await isExe(dctlPath);\n  if (exists) {\n    debug('Found driftctl in cache: %s', dctlPath);\n    return dctlPath;\n  }\n  debug('driftctl not found');\n  return '';\n}\n\nasync function download(url, destination: string): Promise<boolean> {\n  debug('downloading driftctl into %s', destination);\n\n  const payload = {\n    method: 'GET',\n    url: url,\n    output: destination,\n    follow: 3,\n  };\n\n  await spinner('Downloading...');\n  return new Promise<boolean>((resolve, reject) => {\n    makeRequest(payload, function(err, res, body) {\n      try {\n        if (err) {\n          reject(\n            new Error('Could not download driftctl from ' + url + ': ' + err),\n          );\n          return;\n        }\n        if (res.statusCode !== 200) {\n          reject(\n            new Error(\n              'Could not download driftctl from ' + url + ': ' + res.statusCode,\n            ),\n          );\n          return;\n        }\n\n        validateChecksum(body);\n\n        fs.writeFileSync(destination, body);\n        debug('File saved: ' + destination);\n\n        fs.chmodSync(destination, 0o744);\n        resolve(true);\n      } finally {\n        spinner.clearAll();\n      }\n    });\n  });\n}\n\nfunction validateChecksum(body: string) {\n  // only validate if we downloaded the official driftctl binary\n  if (config.DRIFTCTL_URL || config.DRIFTCTL_PATH) {\n    return;\n  }\n\n  const computedHash = crypto\n    .createHash('sha256')\n    .update(body)\n    .digest('hex');\n  const givenHash = driftctlChecksums[driftctlFileName()];\n\n  if (computedHash != givenHash) {\n    throw new Error('Downloaded file has inconsistent checksum...');\n  }\n}\n\nfunction driftctlFileName(): string {\n  let platform = 'linux';\n  switch (os.platform()) {\n    case 'darwin':\n      platform = 'darwin';\n      break;\n    case 'win32':\n      platform = 'windows';\n      break;\n  }\n\n  let arch = 'amd64';\n  switch (os.arch()) {\n    case 'ia32':\n    case 'x32':\n      arch = '386';\n      break;\n    case 'arm':\n      arch = 'arm';\n      break;\n    case 'arm64':\n      arch = 'arm64';\n      break;\n  }\n\n  let ext = '';\n  switch (os.platform()) {\n    case 'win32':\n      ext = '.exe';\n      break;\n  }\n\n  return `driftctl_${platform}_${arch}${ext}`;\n}\n\nfunction driftctlUrl(): string {\n  if (config.DRIFTCTL_URL) {\n    return config.DRIFTCTL_URL;\n  }\n\n  return `${dctlBaseUrl}/${driftctlVersion}/${driftctlFileName()}`;\n}\n","export function restoreEnvProxy(env: NodeJS.ProcessEnv): NodeJS.ProcessEnv {\n  // WARN: We are restoring system en proxy because snyk cli override them but the proxy uses untrusted certs\n  if (process.env.SNYK_SYSTEM_HTTP_PROXY != undefined) {\n    env.HTTP_PROXY = process.env.SNYK_SYSTEM_HTTP_PROXY;\n  }\n  if (process.env.SNYK_SYSTEM_HTTPS_PROXY != undefined) {\n    env.HTTPS_PROXY = process.env.SNYK_SYSTEM_HTTPS_PROXY;\n  }\n  if (process.env.SNYK_SYSTEM_NO_PROXY != undefined) {\n    env.NO_PROXY = process.env.SNYK_SYSTEM_NO_PROXY;\n  }\n  return env;\n}\n","import * as tar from 'tar';\nimport { promises as fsPromises, constants as fsConstants } from 'fs';\nimport { promisify } from 'util';\n\nexport async function isExe(path: string): Promise<boolean> {\n  try {\n    await fsPromises.access(path, fsConstants.X_OK);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function isExists(path: string): Promise<boolean> {\n  try {\n    await fsPromises.stat(path);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function createDirIfNotExists(path: string): Promise<void> {\n  const isDirExists = await isExists(path);\n  if (!isDirExists) {\n    fsPromises.mkdir(path, { recursive: true });\n  }\n}\n\nexport async function isFile(path: string): Promise<boolean> {\n  try {\n    return (await fsPromises.stat(path)).isFile();\n  } catch (err) {\n    return false;\n  }\n}\n\nexport async function isArchive(path: string): Promise<boolean> {\n  try {\n    const tarList = promisify(tar.list);\n    await tarList({ file: path, strict: true });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport async function saveFile(\n  dataBuffer: Buffer,\n  savePath: string,\n): Promise<void> {\n  await fsPromises.writeFile(savePath, dataBuffer);\n  await fsPromises.chmod(savePath, 0o744);\n}\n","import { CustomError } from '../errors';\nimport { IaCErrorCodes } from '../../cli/commands/test/iac/local-execution/types';\nimport { getErrorStringCode } from '../../cli/commands/test/iac/local-execution/error-utils';\n\nexport const services2resources = new Map<string, Array<string>>([\n  // Amazon\n  [\n    'aws_s3',\n    [\n      'aws_s3_bucket',\n      'aws_s3_bucket_analytics_configuration',\n      'aws_s3_bucket_inventory',\n      'aws_s3_bucket_metric',\n      'aws_s3_bucket_notification',\n      'aws_s3_bucket_policy',\n    ],\n  ],\n  [\n    'aws_ec2',\n    [\n      'aws_instance',\n      'aws_key_pair',\n      'aws_ami',\n      'aws_ebs_snapshot',\n      'aws_ebs_volume',\n      'aws_eip',\n      'aws_eip_association',\n      'aws_volume_attachment',\n      'aws_launch_configuration',\n      'aws_launch_template',\n    ],\n  ],\n  ['aws_lambda', ['aws_lambda_function', 'aws_lambda_event_source_mapping']],\n  [\n    'aws_rds',\n    [\n      'aws_db_instance',\n      'aws_db_subnet_group',\n      'aws_rds_cluster',\n      'aws_rds_cluster_endpoint',\n      'aws_rds_cluster_instance',\n    ],\n  ],\n  ['aws_route53', ['aws_route53_record', 'aws_route53_zone']],\n  [\n    'aws_iam',\n    [\n      'aws_iam_access_key',\n      'aws_iam_policy',\n      'aws_iam_policy_attachment',\n      'aws_iam_role',\n      'aws_iam_role_policy',\n      'aws_iam_role_policy_attachment',\n      'aws_iam_user',\n      'aws_iam_user_policy',\n      'aws_iam_user_policy_attachment',\n    ],\n  ],\n  [\n    'aws_vpc',\n    [\n      'aws_security_group',\n      'aws_security_group_rule',\n      'aws_subnet',\n      'aws_default_vpc',\n      'aws_vpc',\n      'aws_default_security_group',\n      'aws_route_table',\n      'aws_default_route_table',\n      'aws_route',\n      'aws_route_table_association',\n      'aws_nat_gateway',\n      'aws_internet_gateway',\n    ],\n  ],\n  [\n    'aws_api_gateway',\n    [\n      'aws_api_gateway_resource',\n      'aws_api_gateway_rest_api',\n      'aws_api_gateway_account',\n      'aws_api_gateway_api_key',\n      'aws_api_gateway_authorizer',\n      'aws_api_gateway_base_path_mapping',\n      'aws_api_gateway_domain_name',\n      'aws_api_gateway_gateway_response',\n      'aws_api_gateway_integration',\n      'aws_api_gateway_integration_response',\n      'aws_api_gateway_method',\n      'aws_api_gateway_method_response',\n      'aws_api_gateway_method_settings',\n      'aws_api_gateway_model',\n      'aws_api_gateway_request_validator',\n      'aws_api_gateway_rest_api_policy',\n      'aws_api_gateway_stage',\n      'aws_api_gateway_vpc_link',\n    ],\n  ],\n  [\n    'aws_apigatewayv2',\n    [\n      'aws_apigatewayv2_api',\n      'aws_apigatewayv2_api_mapping',\n      'aws_apigatewayv2_authorizer',\n      'aws_apigatewayv2_deployment',\n      'aws_apigatewayv2_domain_name',\n      'aws_apigatewayv2_integration',\n      'aws_apigatewayv2_integration_response',\n      'aws_apigatewayv2_model',\n      'aws_apigatewayv2_route',\n      'aws_apigatewayv2_route_response',\n      'aws_apigatewayv2_stage',\n      'aws_apigatewayv2_vpc_link',\n    ],\n  ],\n  ['aws_sqs', ['aws_sqs_queue', 'aws_sqs_queue_policy']],\n  [\n    'aws_sns',\n    ['aws_sns_topic', 'aws_sns_topic_policy', 'aws_sns_topic_subscription'],\n  ],\n  ['aws_ecr', ['aws_ecr_repository']],\n  ['aws_cloudfront', ['aws_cloudfront_distribution']],\n  ['aws_kms', ['aws_kms_key', 'aws_kms_alias']],\n  ['aws_dynamodb', ['aws_dynamodb_table']],\n  // Azure\n  ['azure_base', ['azurerm_resource_group']],\n  ['azure_compute', ['azurerm_image', 'azurerm_ssh_public_key']],\n  ['azure_storage', ['azurerm_storage_account', 'azurerm_storage_container']],\n  [\n    'azure_network',\n    [\n      'azurerm_resource_group',\n      'azurerm_subnet',\n      'azurerm_public_ip',\n      'azurerm_firewall',\n      'azurerm_route',\n      'azurerm_route_table',\n      'azurerm_network_security_group',\n    ],\n  ],\n  ['azure_container', ['azurerm_container_registry']],\n  [\n    'azure_database',\n    ['azurerm_postgresql_server', 'azurerm_postgresql_database'],\n  ],\n  ['azure_loadbalancer', ['azurerm_lb', 'azurerm_lb_rule']],\n  [\n    'azure_private_dns',\n    [\n      'azurerm_private_dns_a_record',\n      'azurerm_private_dns_aaaa_record',\n      'azurerm_private_dns_cname_record',\n      'azurerm_private_dns_mx_record',\n      'azurerm_private_dns_ptr_record',\n      'azurerm_private_dns_srv_record',\n      'azurerm_private_dns_txt_record',\n      'azurerm_private_dns_zone',\n    ],\n  ],\n\n  // Google\n  [\n    'google_cloud_platform',\n    [\n      'google_project_iam_binding',\n      'google_project_iam_member',\n      'google_project_iam_policy',\n    ],\n  ],\n  [\n    'google_cloud_storage',\n    [\n      'google_storage_bucket',\n      'google_storage_bucket_iam_binding',\n      'google_storage_bucket_iam_member',\n      'google_storage_bucket_iam_policy',\n    ],\n  ],\n  [\n    'google_compute_engine',\n    [\n      'google_compute_address',\n      'google_compute_disk',\n      'google_compute_global_address',\n      'google_compute_firewall',\n      'google_compute_health_check',\n      'google_compute_image',\n      'google_compute_instance',\n      'google_compute_instance_group',\n      'google_compute_network',\n      'google_compute_node_group',\n      'google_compute_router',\n      'google_compute_subnetwork',\n    ],\n  ],\n  ['google_cloud_dns', ['google_dns_managed_zone']],\n  [\n    'google_cloud_bigtable',\n    ['google_bigtable_instance', 'google_bigtable_table'],\n  ],\n  [\n    'google_cloud_bigquery',\n    ['google_bigquery_table', 'google_bigquery_dataset'],\n  ],\n  ['google_cloud_functions', ['google_cloudfunctions_function']],\n  ['google_cloud_sql', ['google_sql_database_instance']],\n  ['google_cloud_run', ['google_cloud_run_service']],\n]);\n\nexport function verifyServiceMappingExists(services: string[]): void {\n  if (services.length == 0) {\n    throw new InvalidServiceError('');\n  }\n  for (const s of services) {\n    if (!services2resources.has(s)) {\n      throw new InvalidServiceError(\n        `We were unable to match service \"${s}\". Please provide a valid service name: ${existingServiceNames()}`,\n      );\n    }\n  }\n}\n\nexport function findServiceMappingForType(type: string): string {\n  for (const service of services2resources.keys()) {\n    if (services2resources.get(service)?.includes(type)) {\n      return service;\n    }\n  }\n  return '';\n}\n\nfunction existingServiceNames(): string {\n  let res = '';\n  for (const s of services2resources.keys()) {\n    res += `${s},`;\n  }\n  return res.substring(0, res.length - 1);\n}\n\nexport function createIgnorePattern(services: string[]): string {\n  return createIgnorePatternWithMap(services, services2resources);\n}\n\nexport function createIgnorePatternWithMap(\n  services: string[],\n  serviceMap: Map<string, Array<string>>,\n): string {\n  let res = '*';\n  const seenResources = new Set<string>();\n  for (const s of services) {\n    const resourcePatterns = serviceMap.get(s);\n    for (const rp of resourcePatterns || []) {\n      // A resource might belong to multiple services, skip it if already processed\n      if (seenResources.has(rp)) {\n        continue;\n      }\n      res += `,!${rp}`;\n      seenResources.add(rp);\n    }\n  }\n  return res;\n}\n\nexport class InvalidServiceError extends CustomError {\n  constructor(msg: string) {\n    super(msg);\n    this.code = IaCErrorCodes.InvalidServiceError;\n    this.strCode = getErrorStringCode(this.code);\n    this.userMessage = msg;\n  }\n}\n"],"names":[],"sourceRoot":""}